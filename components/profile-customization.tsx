"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { ProfileCustomization as ProfileCustomizationType } from "@/types/rewards";
import { toast } from "@/components/ui/use-toast";
import axios from "axios";

interface ProfileCustomizationProps {
  onClose: () => void;
  onSave: (newCustomization: ProfileCustomizationType) => void;
}

export default function ProfileCustomization({ onClose, onSave }: ProfileCustomizationProps) {
  const [customization, setCustomization] = useState<ProfileCustomizationType>({
    userId: "",
    theme: "default",
    badge: "",
    frame: "none",
    title: "none",
    background: "",
    effects: [],
  });

  const handleSave = async () => {
    try {
      const response = await axios.put("/api/profile/update", { customization: JSON.stringify(customization) });
      if (response.status === 200) {
        onSave(customization);
        toast({
          title: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
          description: "‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
        });
      } else {
        toast({
          title: "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
          description: response.data.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÑ‡∏î‡πâ",
          variant: "destructive",
        });
      }
    } catch (error) {
      console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
      toast({
        title: "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
        description: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á",
        variant: "destructive",
      });
    }
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div>
          <label className="text-sm font-medium">‡∏ò‡∏µ‡∏°</label>
          <select
            value={customization.theme}
            onChange={(e) => setCustomization({ ...customization, theme: e.target.value as any })}
            className="w-full p-2 border rounded"
          >
            <option value="default">Default</option>
            <option value="gold">Gold</option>
            <option value="platinum">Platinum</option>
            <option value="diamond">Diamond</option>
          </select>
        </div>
        <div>
          <label className="text-sm font-medium">‡∏Å‡∏£‡∏≠‡∏ö</label>
          <select
            value={customization.frame}
            onChange={(e) => setCustomization({ ...customization, frame: e.target.value })}
            className="w-full p-2 border rounded"
          >
            <option value="none">‡πÑ‡∏°‡πà‡∏°‡∏µ</option>
            <option value="rainbow">Rainbow</option>
            <option value="fire">Fire</option>
            <option value="ice">Ice</option>
          </select>
        </div>
        <div>
          <label className="text-sm font-medium">‡πÅ‡∏ö‡∏î‡∏à‡πå</label>
          <select
            value={customization.badge}
            onChange={(e) => setCustomization({ ...customization, badge: e.target.value })}
            className="w-full p-2 border rounded"
          >
            <option value="">‡πÑ‡∏°‡πà‡∏°‡∏µ</option>
            <option value="heart">üíõ</option>
            <option value="crown">üëë</option>
            <option value="star">‚≠ê</option>
            <option value="diamond">üíé</option>
          </select>
        </div>
        <div>
          <label className="text-sm font-medium">‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</label>
          <select
            value={customization.title}
            onChange={(e) => setCustomization({ ...customization, title: e.target.value })}
            className="w-full p-2 border rounded"
          >
            <option value="none">‡πÑ‡∏°‡πà‡∏°‡∏µ</option>
            <option value="helper">‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠</option>
            <option value="guardian">‡∏ú‡∏π‡πâ‡∏û‡∏¥‡∏ó‡∏±‡∏Å‡∏©‡πå</option>
            <option value="legend">‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô</option>
          </select>
        </div>
        <div className="flex gap-2">
          <Button onClick={handleSave}>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</Button>
          <Button variant="outline" onClick={onClose}>
            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </Button>
        </div>
      </CardContent>
    </Card>
  );
}