"use strict";(()=>{var e={};e.id=9080,e.ids=[9080],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},61815:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>k,requestAsyncStorage:()=>f,routeModule:()=>y,serverHooks:()=>x,staticGenerationAsyncStorage:()=>v});var s={};r.r(s),r.d(s,{GET:()=>m,PUT:()=>g});var a=r(49303),n=r(88716),o=r(60670),i=r(87070),u=r(72331),d=r(90455),p=r(91585),l=r(26033);let c=p.IX(p.Ry({key:p.Z_().min(1,"Key is required"),value:p.Z_().min(1,"Value is required")}));async function m(e){let t=e.headers.get("authorization")?.replace("Bearer ","");if(!t)return i.NextResponse.json({error:"No token provided",status:401},{status:401});let r=(0,d.WX)(t);if(!r||"ADMIN"!==r.role)return i.NextResponse.json({error:"Unauthorized",status:401},{status:401});try{let e=await u._.systemSettings.findMany({select:{key:!0,value:!0,updatedAt:!0}});return i.NextResponse.json({data:e,status:200})}catch(e){return console.error("Error fetching settings:",e),i.NextResponse.json({error:"Failed to fetch settings",status:500},{status:500})}}async function g(e){let t=e.headers.get("authorization")?.replace("Bearer ","");if(!t)return i.NextResponse.json({error:"No token provided",status:401},{status:401});let r=(0,d.WX)(t);if(!r||"ADMIN"!==r.role)return i.NextResponse.json({error:"Unauthorized",status:401},{status:401});try{let t=await e.json(),s=c.parse(t),a=await u._.$transaction(s.map(e=>u._.systemSettings.upsert({where:{key:e.key},update:{value:e.value,updatedAt:new Date},create:{key:e.key,value:e.value},select:{key:!0,value:!0,updatedAt:!0}})));return await u._.auditLog.create({data:{userId:r.id,action:"UPDATE_SETTINGS",entityType:"SystemSettings",entityId:s.map(e=>e.key).join(","),createdAt:new Date}}),i.NextResponse.json({data:a,status:200})}catch(e){if(console.error("Error updating settings:",e),e instanceof l.jm)return i.NextResponse.json({error:"Invalid data",details:e.errors,status:400},{status:400});return i.NextResponse.json({error:"Failed to update settings",status:500},{status:500})}}let y=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/settings/route",pathname:"/api/admin/settings",filename:"route",bundlePath:"app/api/admin/settings/route"},resolvedPagePath:"D:\\testProject\\test-project\\app\\api\\admin\\settings\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:v,serverHooks:x}=y,h="/api/admin/settings/route";function k(){return(0,o.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:v})}},90455:(e,t,r)=>{r.d(t,{Gv:()=>u,RA:()=>d,WX:()=>p,c_:()=>i});var s=r(98691),a=r(41482),n=r.n(a);let o=process.env.JWT_SECRET||"your-secret-key";async function i(e){return s.ZP.hash(e,12)}async function u(e,t){return s.ZP.compare(e,t)}function d(e){let t={id:e.id,email:e.email,role:e.role,firstName:e.firstName,lastName:e.lastName,organizationId:e.organizationId},r=n().sign(t,o,{expiresIn:"7d"});return console.log("Generated token payload:",t),console.log("Generated token:",r),r}function p(e){try{let t=n().verify(e,o);return console.log("Decoded token:",t),t}catch(e){return console.error("Token verification failed:",e.message),null}}},72331:(e,t,r)=>{r.d(t,{_:()=>a});var s=r(53524);let a=globalThis.prisma??new s.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,5972,1482,8691,1585],()=>r(61815));module.exports=s})();